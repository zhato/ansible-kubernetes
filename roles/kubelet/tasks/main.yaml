---
- name: install kubernetes apt key
  apt_key:
    state: present
    data: "{{ lookup('file', 'weaveworks-apt-signing.key') }}"

- name: remove old kubernetes repo
  apt_repository: repo='deb http://apt.kubernetes.io/ kubernetes-xenial main' state=absent

- name: add kubernetes repo
  apt_repository: repo='deb http://weaveworks-apt-repo.s3-website-us-east-1.amazonaws.com/ stable main' state=present

- name: install common kubernetes components
  apt: name={{item}} state=present update_cache=yes
  with_items:
    - kubelet={{kubernetes_versions[hostk8s|default(defaultk8s)]["kubelet"]}}
    - kubernetes-cni={{kubernetes_versions[hostk8s|default(defaultk8s)]["cni"]}}

- name: mkdir /etc/systemd/system/kubelet.service.d
  file: path=/etc/systemd/system/kubelet.service.d state=directory

- name: copy kubelet systemd drop in
  template: src=10-kubelet.conf dest=/etc/systemd/system/kubelet.service.d/10-kubelet.conf
  notify:
    - restart kubelet

- name: copy kubelet config
  template: src=kubelet.conf dest=/etc/kubernetes/kubelet.conf
  notify:
    - restart kubelet

- name: make kubernetes pki directory
  file: path=/etc/kubernetes/pki state=directory
  notify:
    - restart kubelet

- name: copy kubelet credentials
  copy: src={{env_dir}}/pki/{{item}} dest=/etc/kubernetes/pki/{{item | basename}}
  with_items:
    - issued/kubelet-{{ ansible_hostname }}.crt
    - private/kubelet-{{ ansible_hostname }}.key
    - ca.crt
  notify:
    - restart kubelet

- name: start kubelet and make sure it loads on restart
  service:
    name: kubelet
    state: started
    enabled: yes
