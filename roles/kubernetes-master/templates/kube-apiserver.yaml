---
kind: Pod
apiVersion: v1
metadata:
  name: kube-apiserver
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: kube-apiserver
    image: gcr.io/google_containers/kube-apiserver-amd64:{{ kubernetes_versions[hostk8s|default(defaultk8s)]["images"] }}
    command:
    - /usr/local/bin/kube-apiserver
    args:
    - --v=4

    - --insecure-bind-address=127.0.0.1
    - --secure-port=443
    - --client-ca-file=/etc/kubernetes/pki/ca.crt
    - --tls-cert-file=/etc/kubernetes/pki/apiserver-{{ ansible_hostname }}.crt
    - --tls-private-key-file=/etc/kubernetes/pki/apiserver-{{ ansible_hostname }}.key
    - --service-account-key-file=/etc/kubernetes/pki/controller-manager/service-accounts.key

    # Clustering config
    - --etcd-servers={{ groups['master'] | map('extract', hostvars, 'private_hostname') | map('regex_replace', '(.*)', 'http://\\1:2379') | join(',') }}
    - --apiserver-count={{ groups['master'] | length }}

    - --cloud-provider=aws
    - --service-cluster-ip-range=10.0.0.0/16
    - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeLabel,DefaultStorageClass,ResourceQuota
    - --allow-privileged

    resources:
      requests:
        cpu: 250m
    volumeMounts:
    - name: certs
      mountPath: /etc/ssl/certs
      readOnly: true
    - name: pki
      readOnly: true
      mountPath: /etc/kubernetes/
    livenessProbe:
      httpGet:
        path: /healthz
        port: 8080
        host: 127.0.0.1
      initialDelaySeconds: 15
      timeoutSeconds: 15
  volumes:
  - name: certs
    hostPath:
      path: /etc/ssl/certs
  - name: pki
    hostPath:
      path: /etc/kubernetes
